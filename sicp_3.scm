;;ex3.1
(define (make-accumulator acc)
  (lambda (adder) (set! acc (+ acc adder))))
;;ex3.2
(define (make-monitored f)
  (let ((count 0))
    (define (how-many-calls?) count)
    (define (reset-count) (set! count 0))
    (define (dispatch m)
      (cond ((eq? m 'how-many-calls?) (how-many-calls?))
	    ((eq? m 'reset-count) (reset-count))
	    (else (begin (set! count (+ count 1))
			 (f m)))))
    dispatch))
;;ex3.3
;;ex3.4
(define (make-account balance password)
  (let ((wrong-count 0))
    (define (withdraw amount)
      (if (>= balance  amount)
	  (begin (set! balance (- balance amount))
		 balance)
	  "Insufficient funds"))
    (define (deposite amount)
      (set! balance (+ balance amount))
      balance)
    (define (dispatch p m)
      (if (eq? p password)
	  (begin (set! wrong-count 0)
		 (cond ((eq? m 'withdraw) withdraw)
		       ((eq? m 'deposite) deposite)
		       (else (error "Unknown request: MAKE-ACCOUNT" m))))
	  (begin (set! wrong-count (+ wrong-count 1))
		 (if (>= wrong-count 7)
		     (constantly "Call the Cop")
		     (constantly "Incorrect password")))))
    dispatch))
